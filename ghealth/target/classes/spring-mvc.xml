<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                            http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
                            http://www.springframework.org/schema/context  
                            http://www.springframework.org/schema/context/spring-context-4.0.xsd  
                            http://www.springframework.org/schema/mvc  
                            http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
                            http://www.springframework.org/schema/aop  
                            http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
                            http://www.springframework.org/schema/tx 
                            http://www.springframework.org/schema/tx/spring-tx-2.0.xsd">

	<!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
	<context:component-scan base-package="com.wicresoft.ghealth.*.controller" />

	<!-- 添加注解驱动 -->
	<!--注解驱动 -->
	<mvc:annotation-driven enable-matrix-variables="true">
		<mvc:message-converters>
			<ref bean="stringHttpMessageConverter" />
			<ref bean="byteArrayHttpMessageConverter" />
			<ref bean="mappingJackson2HttpMessageConverter" />
		</mvc:message-converters>
	</mvc:annotation-driven>

	<bean id="stringHttpMessageConverter"
		class="org.springframework.http.converter.StringHttpMessageConverter" />

	<bean id="byteArrayHttpMessageConverter"
		class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />

	<!--解决IE浏览器json文件下载和json数据中文乱码的问题 -->
	<bean id="mappingJackson2HttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<!-- 允许对静态资源文件的访问 -->
	<mvc:default-servlet-handler />

	<!-- 定义跳转的文件的前后缀 ，视图模式配置 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 默认编码 -->
		<property name="defaultEncoding" value="UTF-8" />
		<!-- 文件大小最大值 -->
		<property name="maxUploadSize" value="10485760000" />
		<!-- 内存中的最大值 -->
		<property name="maxInMemorySize" value="40960" />
	</bean>

	<!-- 配置身份验证的拦截器 -->
	<mvc:interceptors>
		<!--身份验证的拦截器 -->
		<bean id="authorizationInterceptor"
			class="com.wicresoft.ghealth.authorization.interceptor.AuthorizationInterceptor">
			<!--验证信息存储的Http头 -->
			<property name="httpHeaderName" value="Authorization" />
			<!--验证信息通用前缀，例如Bearer -->
			<property name="httpHeaderPrefix" value="" />
			<!--验证失败时的错误信息 -->
			<property name="unauthorizedErrorMessage" value="令牌失效，请重新登录" />
			<!--管理验证信息的bean -->
			<property name="manager" ref="tokenManager" />
		</bean>
	</mvc:interceptors>

	<!--管理验证信息的bean -->
	<bean id="tokenManager"
		class="com.wicresoft.ghealth.authorization.manager.impl.RedisTokenManager">
		<!--Token失效时间 -->
		<property name="tokenExpireSeconds" value="3600" />
		<!--Redis客户端 -->
		<property name="jedisPool" ref="jedisPool" />
	</bean>

	<!-- 全局异常处理 -->
	<bean id="exceptionHandler" class="com.wicresoft.ghealth.common.DefaultExceptionHandler" />

	<!-- =========================配置调度工厂========================= -->
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="heartbook" />
			</list>
		</property>
		<property name="quartzProperties">
			<props>
				<!-- 主要是这个参数 -->
				<prop key="org.quartz.scheduler.skipUpdateCheck">true</prop>
			</props>
		</property>
	</bean>
	<!-- =========================配置作业触发器========================= -->
	<bean id="heartbook" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="job1" />
		<property name="cronExpression" value="0 30 11 * * ?" />
	</bean>

	<!-- =========================配置作业类========================= -->
	<bean id="job1"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject">
			<bean
				class="com.wicresoft.ghealth.acquisition.controller.WearableController" />
		</property>
		<property name="targetMethod" value="heartbook" />
		<property name="concurrent" value="false" /><!-- 作业不并发调度 -->
	</bean>
	
     <!-- =========================注册验证器========================= -->
     <mvc:annotation-driven validator="validator" />
     <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
        <!-- 这里配置将使用上面国际化配置的messageSource -->
       	<property name="validationMessageSource" ref="messageSource" />
    </bean>

</beans>